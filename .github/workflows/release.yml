name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.5'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test --coverage

    - name: Build Android APK
      run: flutter build apk --release

    - name: Build Android App Bundle
      run: flutter build appbundle --release

    - name: Build Web
      run: flutter build web --release

    - name: Build Linux
      run: flutter build linux --release

    - name: Build Windows
      run: flutter build windows --release

    - name: Build macOS
      run: flutter build macos --release

    - name: Create release archive
      run: |
        mkdir -p release
        cp build/app/outputs/flutter-apk/app-release.apk release/
        cp build/app/outputs/bundle/release/app-release.aab release/
        cp -r build/web release/
        cp -r build/linux/x64/release/bundle release/linux
        cp -r build/windows/runner/Release release/windows
        cp -r build/macos/Build/Products/Release release/macos
        tar -czf release.tar.gz release/

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-builds
        path: release.tar.gz

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-android:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.5'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build Android App Bundle
      run: flutter build appbundle --release

    - name: Setup Google Play Console
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.example.masquerade
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: production
        status: completed
      if: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON != '' }}

  deploy-web:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.5'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build Web
      run: flutter build web --release

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/web
      if: startsWith(github.ref, 'refs/tags/v')
